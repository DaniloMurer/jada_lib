package com.danilojakob.util.file;
/*
 *@Author: Danilo Jakob
 *@Copyright (c) Danilo Jakob 2019
 */

import java.io.*;
import java.util.Properties;

/**
 * Class for managing properties
 */
public class PropertyFileHelper {

    private File file_;
    private String homedir_ = System.getProperty("user.home");

    /**
     * Method for saving properties as a file
     * @param properties {@link Properties} that need to be saved
     * @param fileName {@link String} name of the file
     */
    public void savePropertyFile(Properties properties, String fileName) {
        try {
            File f = new File(homedir_ + "\\conf");
            if (f.exists() && f.isDirectory()) {
                file_ = new File(homedir_ + "\\conf\\" + fileName + ".properties");
            } else {
                new File(homedir_ + "\\conf").mkdir();
                file_ = new File(homedir_ + "\\conf\\" + fileName + ".properties");
            }

            FileOutputStream fileOutputStream = new FileOutputStream(file_);
            properties.store(fileOutputStream, "Properties of " + fileName + "\nDo not edit this file_!");
            fileOutputStream.close();
        } catch (Exception ex) {
            System.err.println(ex);
        }
    }

    /**
     * Read properties out of file
     * @param fileName {@link String} name of the file
     * @return {@link Properties} of the file
     */
    public Properties readPropertyFile(String fileName)
    {
        //Variable to hold the properties from file_
        Properties properties = new Properties();
        try {
            FileInputStream fileInputStream = new FileInputStream(homedir_ + "\\conf\\" + fileName + ".properties");
            properties.load(fileInputStream);
        } catch (Exception ex) {
            System.err.println(ex);
        }
        return properties;
    }
}
